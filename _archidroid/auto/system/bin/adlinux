#!/system/bin/sh

#     _             _     _ ____            _     _
#    / \   _ __ ___| |__ (_)  _ \ _ __ ___ (_) __| |
#   / _ \ | '__/ __| '_ \| | | | | '__/ _ \| |/ _` |
#  / ___ \| | | (__| | | | | |_| | | | (_) | | (_| |
# /_/   \_\_|  \___|_| |_|_|____/|_|  \___/|_|\__,_|
#
# Copyright 2014 Łukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AD="/data/media/0/ArchiDroid"
SSHD=0
VNCD=0
EXTSD=0
EXTSDSUPPORTED=0
MOUNTCORE=0
MOUNTSTORAGE=0

if [[ "$(whoami 2>&1 | grep -c "root")" -eq 0 && "$(whoami 2>&1 | grep -c "uid 0")" -eq 0 ]]; then
	echo "Sorry, but this utility requires root access"
	echo "Executed as: $(whoami)"
	exit 1
fi

for ADPATH in "/storage/sdcard1 /storage/extSdCard"; do
	if [[ -d "$ADPATH" ]]; then
		EXTSD=1
		EXTSDPATH="$ADPATH"
		ln -s "$AD" "$EXTSDPATH/adtest" >/dev/null 2>&1
		if [[ $? -eq 0 ]]; then
			rm -f "$EXTSDPATH/adtest"
			EXTSDSUPPORTED=1
		else
			EXTSDSUPPORTED=0
		fi
		if [[ "$EXTSDSUPPORTED" -eq 1 && -d "$EXTSDPATH/ArchiDroid" ]]; then
			AD="$EXTSDPATH/ArchiDroid"
		fi
		break
	fi
done

ADMNT="$AD/debian"

echo "Welcome to ArchiDroid Debian/Linux Booter!"

if [ $# -eq 0 ]; then
	echo "Usage: $(basename "$0") [MODE] [EXTRA FLAGS]"
	echo
	echo "Available modes:"
	echo
	echo "default    Mounts /data /system /storage/sdcard0 /storage/sdcard1 and core filesystems in chroot. Default suggested mode"
	echo
	echo "safe       Mounts only core filesystems in chroot. Useful if you don't want to share your storage in chroot"
	echo
	echo "bare       Doesn't mount even core filesystems such as /proc /dev or /sys. Requires \"debian force\" to enter chroot. This is the \"real\" safe mode. You won't be able to interact with an android in any way, while debian itself will work in very limited environment, making core functions unavailable. Not suggested"
	echo
	echo "rebuild    Reboots your device and removes debian folder in the safe way. All debian's data (in $ADMNT) will be lost!"
	echo
	echo "unmount    Unmounts your pocket debian. As for now unmounting requires reboot, so this works the same as rebooting your device"
	echo
	printf "Choice: "
	read CHOICE
	echo
	echo
	echo "You may specify extra options here separated by a whitespace. You can also just skip this question and apply default settings"
	echo
	echo "ArchiDroid will prioritize external sd card if it contains ArchiDroid/debian folder already and fall back to intsd otherwise, you can override this here"
	echo "Currently using ArchiDroid in: $AD. If you're satisfied with this path you can just skip this question"
	echo "WARNING! Debian requires symlink functionality, typically native windows filesystems DON'T support symbolic links, therefore you need to have your external sd card formatted in one of the native linux filesystems, e.g. ext4"
	if [[ "$EXTSDSUPPORTED" -eq 1 ]]; then
		echo "ArchiDroid Detect: Your external sd card IS supported"
	else
		echo "ArchiDroid Detect: Your external sd card IS NOT supported"
	fi
	echo
	echo "extsd    Use external sd card (/storage/sdcard1 /storage/extSdCard), if possible"
	echo
	echo "intsd    Use internal sd card (/data/media/0)"
	echo
	echo
	echo "ArchiDroid is able to start a number of services after debian boots up, this can save your time doing so manually"
	echo
	echo "ssh    Will start Secure Shell Daemon after debian boot"
	echo
	echo "vnc    Will start VNC Daemon after debian boot"
	echo
	echo
	echo "Example: intsd ssh"
	printf "Extra options: "
	read EXTRA
else
	CHOICE="$1"
	shift
	EXTRA="$*"
fi

# Parse extra args
for ARG in $EXTRA; do
	case "$ARG" in
		--intsd|intsd)
			if [ "$AD" != "/data/media/0/ArchiDroid" ]; then
				echo "Overriding ArchiDroid path to internal sd card!"
				AD="/data/media/0/ArchiDroid"
				ADMNT="$AD/debian"
			fi
			;;
		--extsd|extsd)
			if [[ "$EXTSDSUPPORTED" -eq 1 ]]; then
				echo "Overriding ArchiDroid path to external sd card!"
				AD="$EXTSDPATH"
				ADMNT="$AD/debian"
			else
				echo "You selected external sd card, but it's not available because of broken Linux symbolic links functionality"
				echo "You need to reformat your external sd card to native linux filesystem (e.g. ext4) if you want to use debian on your external sd card"
				exit 1
			fi
			;;
		--ssh|ssh)
			SSHD=1
			;;
		--vnc|vnc)
			VNCD=1
			;;
		*)
	esac
done

case "$CHOICE" in
	--unmount|unmount)
		sync
		reboot
		exit 0
		;;
	--rebuild|rebuild)
		sysrw
		{
			echo "#!/system/bin/sh"
			echo "rm -rf $ADMNT"
			echo "sysrw"
			echo "rm -f \$0"
			echo "sysro"
			echo "exit 0"
		} > /system/etc/init.d/91ArchiDroid_RebuildDebian
		chmod 755 /system/etc/init.d/91ArchiDroid_RebuildDebian
		sync
		reboot
		exit 0
		;;
	--default|default) MOUNTCORE=1; MOUNTSTORAGE=1 ;;
	--safe|safe) MOUNTCORE=1 ;;
	--bare) ;;
	*)
		echo "Sorry, $CHOICE is not a valid choice, exiting"
		exit 1
esac

if [[ -e "$ADMNT/proc/uptime" && -e "$ADMNT/dev/urandom" && -e "$ADMNT/sys/kernel" ]]; then
	echo "ArchiDroid's Pocket Debian is already booted!"
else
	if [ ! -e "$ADMNT/bin/bash" ]; then
		echo "This is your first installation!"
		echo
		echo "User: root"
		echo "Password: archidroid$"
		echo "You can change default password via \"passwd\" command after you login"
		echo
		echo "Please note that using \"adlinux\" or \"debian\" commands doesn't require a password"
		echo "However, password is required e.g. for accessing OpenSSH server"
		echo
		echo "Installing ArchiDroid's Pocket Debian in $ADMNT..."
		mkdir -p "$ADMNT"
		busybox tar -zxf /system/archidroid/system/debian.tar.gz -C "$ADMNT"

		echo "Cleanup..."
		cp /file_contexts "$ADMNT" # We need SELinux context or various apps will go crazy
		debian "force" "cmd" "ln -s /proc/mounts /etc/mtab" # This is done automatically on most distros on first boot, but we don't have Debian's /init
		debian "force" "cmd" "sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config" # Newer versions of SSH deny root access by default now, and since we don't have any other user, we need it
		debian "force" "cmd" "echo -e 'archidroid$\narchidroid$' | passwd >/null.txt 2>&1" # By default there's no password for root required by SSH, this fixes it
		debian "force" "cmd" "rm -f /null.txt" # We don't have /dev/null mounted at this stage
		echo "Done!"
	fi

	echo "Booting ArchiDroid's Pocket Debian..."

	if [[ "$MOUNTCORE" -eq 1 ]]; then
		echo "Mounting core filesystems..."
		mkdir -p "$ADMNT/dev" && busybox mount --bind /dev "$ADMNT/dev"
		mkdir -p "$ADMNT/dev/pts" && busybox mount --bind /dev/pts "$ADMNT/dev/pts"
		mkdir -p "$ADMNT/dev/shm" && busybox mount --bind /dev/shm "$ADMNT/dev/shm"
		mkdir -p "$ADMNT/proc" && busybox mount -t proc proc "$ADMNT/proc"
		mkdir -p "$ADMNT/sys" && busybox mount -t sysfs sysfs "$ADMNT/sys"
		mkdir -p "$ADMNT/tmp" && busybox mount -t tmpfs tmpfs "$ADMNT/tmp"
		if [[ "$MOUNTSTORAGE" -eq 1 ]]; then
			echo "Mounting storages..."
			mkdir -p "$ADMNT/system" && busybox mount --bind /system "$ADMNT/system"
			mkdir -p "$ADMNT/data" && busybox mount --bind /data "$ADMNT/data"
			mkdir -p "$ADMNT/storage/sdcard0" && busybox mount --bind /storage/sdcard0 "$ADMNT/storage/sdcard0"
			mkdir -p "$ADMNT/storage/sdcard0" && busybox mount --bind /storage/sdcard0 "$ADMNT/storage/sdcard0"
			if [[ "$EXTSD" -eq 1 ]]; then
				mkdir -p "$ADMNT/$EXTSDPATH" && busybox mount --bind "$EXTSDPATH" "$ADMNT/$EXTSDPATH"
			fi
		fi
	fi
fi

echo "ArchiDroid's Pocket Debian is ready!"
echo

PRINTIFCONFIG=0
if [[ "$SSHD" -eq 1 ]]; then
	PRINTIFCONFIG=1
	echo "Starting Secure Shell Daemon!"
	debian "force" "cmd" "service ssh start"
	echo "You can access OpenSSH server via any SSH client such as PuTTY. OpenSSH is listening on default 22 port"
fi
if [[ "$VNCD" -eq 1 ]]; then
	PRINTIFCONFIG=1
	echo "Starting VNC Daemon!"
	debian "force" "cmd" "rm -f /root/.vnc/*.pid"
	debian "force" "cmd" "rm -f /root/.vnc/*.log"
	debian "force" "cmd" "tightvncserver -geometry 1280x720"
	echo "You can access VNCD server via any VNC client such as VNC Viewer. VNCD is listening on default 5901 port"
	echo
	echo "Please note that ArchiDroid's Pocket Debian does NOT include any graphical user interafce by default (only graphical terminal)"
	echo "You need to install one if you want to use it"
	echo "The easiest way to achieve that is typing \"debian\" command, then \"apt-get update && apt-get install GUI\""
	echo "Where GUI could be one of the following: lxde xfce4 kde-standard kde-full gnome-core gnome"
	echo "Suggested by ArchiDroid: lxde, xfce4 - both of them are very lightweight, and this is core thing for our little Android devices"
	echo "Please note that you must restart VNCD after installing GUI of your choice. Rebooting your device and starting adlinux in vnc mode again will do the trick"
fi

if [[ "$PRINTIFCONFIG" -eq 1 ]]; then
	echo
	echo "You can now access your ArchiDroid's Pocket Debian remotely!"
	echo "Here are currently available local IPs, which may help you:"
	busybox ifconfig | grep "cast"
	echo "If you want to check more, \"busybox ifconfig\" may help"
	echo "Please note that only people in your LAN (e.g. connected to the same Wi-Fi router) can access ArchiDroid's Pocket Debian on this device"
else
	echo "You didn't start any service for accessing your ArchiDroid's Pocket Debian remotely"
	echo "This is OK if you know what you're doing. You can still access your debian with \"debian\" command"
	echo "If that's not a case, execute adlinux again and don't forget to specify ssh/vnc switch this time!"
fi

exit 0
